# $Id$
# Generates the contents of "components_defs.mk".

from components import EmulationCore, iterComponents
from makeutils import extractMakeVariables
from outpututils import rewriteIfChanged
from probe_defs import resolveDependencies

import sys

def iterComponentDefs(probeMakePath):
	probeVars = extractMakeVariables(probeMakePath)

	# Get the Make names of the libraries needed by the emulation core
	# component, in the proper order for static linking.
	# TODO: Actually the link flags of lib A should already reflect that.
	#       Are we compensating for bad link flags?
	coreLibs = tuple(
		name
		for name in resolveDependencies(EmulationCore.dependsOn)
		if name in EmulationCore.dependsOn
		)

	yield '# Automatically generated by build process.'
	yield 'CORE_LIBS:=%s' % ' '.join(coreLibs)
	for component in iterComponents():
		yield 'COMPONENT_%s:=%s' % (
			component.makeName,
			str(component.canBuild(probeVars)).lower()
			)

if len(sys.argv) == 3:
	rewriteIfChanged(sys.argv[1], iterComponentDefs(sys.argv[2]))
else:
	print >> sys.stderr, (
		'Usage: python components2defs.py COMPONENTS_DEFS PROBE_MAKE'
		)
	sys.exit(2)
