# $Id$
# Creates the components header file.

from components import checkComponents, componentNames
from makeutils import extractMakeVariables

import sys

def iterComponentsHeader(probeMakePath):
	probeVars = extractMakeVariables(probeMakePath)
	componentStatus = zip(componentNames, checkComponents(probeVars))

	yield '// Automatically generated by build process.'
	yield ''
	yield '#ifndef COMPONENTS_HH'
	yield '#define COMPONENTS_HH'
	yield ''
	yield '#include <string>'
	yield ''
	for varName, buildable in componentStatus:
		if buildable:
			yield '#define COMPONENT_%s 1' % varName
		else:
			yield '// #undef COMPONENT_%s' % varName
	yield ''
	yield 'namespace openmsx {'
	yield ''
	yield 'static const std::string BUILD_COMPONENTS = "%s";' % ' '.join(
		varName for varName, buildable in componentStatus if buildable
		)
	yield ''
	yield '} // namespace openmsx'
	yield ''
	yield '#endif // COMPONENTS_HH'

if len(sys.argv) == 2:
	probeMakePath = sys.argv[1]
	for line in iterComponentsHeader(probeMakePath):
		print line
else:
	print >>sys.stderr, (
		'Usage: python components2code.py PROBE_MAKE'
		)
	sys.exit(2)
