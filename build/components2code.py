# $Id$
# Creates the components header file.

from makeutils import parseBool

import sys

components = ( 'CORE', 'JACK', 'GL' )

def iterComponentsHeader(componentStatus):
	yield '// Automatically generated by build process.'
	yield ''
	yield '#ifndef COMPONENTS_HH'
	yield '#define COMPONENTS_HH'
	yield ''
	yield '#include <string>'
	yield ''
	for varName in components:
		if componentStatus[varName]:
			yield '#define COMPONENT_%s 1' % varName
		else:
			yield '// #undef COMPONENT_%s' % varName
	yield ''
	yield 'namespace openmsx {'
	yield ''
	yield 'static const std::string BUILD_COMPONENTS = "%s";' % ' '.join(
		varName for varName in components if componentStatus[varName]
		)
	yield ''
	yield '} // namespace openmsx'
	yield ''
	yield '#endif // COMPONENTS_HH'

if len(sys.argv) == 1 + len(components):
	componentStatus = dict(
		( varName, parseBool(value) )
		for varName, value in zip(components, sys.argv[1 : ])
		)
	for line in iterComponentsHeader(componentStatus):
		print line
else:
	print >>sys.stderr, (
		'Usage: python components2code.py '
		'COMPONENT_CORE COMPONENT_JACK COMPONENT_GL'
		)
	sys.exit(2)
