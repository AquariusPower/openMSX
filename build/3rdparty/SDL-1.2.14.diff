diff -ru SDL-1.2.14.org/src/events/SDL_keyboard.c SDL-1.2.14/src/events/SDL_keyboard.c
--- SDL-1.2.14.org/src/events/SDL_keyboard.c        Mon Oct 12 15:07:14 2009
+++ SDL-1.2.14/src/events/SDL_keyboard.c       Fri Feb 26 23:52:23 2010
@@ -533,6 +533,9 @@
 	}
 
 	if ( keysym->sym != SDLK_UNKNOWN ) {
+		if (SDL_ModState != (SDLMod)modstate) {
+			SDL_ModState = (SDLMod)modstate;
+		}
 		/* Drop events that don't change state */
 		if ( SDL_KeyState[keysym->sym] == state ) {
 #if 0
diff -ru SDL-1.2.14.org/src/video/windib/SDL_dibevents.c SDL-1.2.14/src/video/windib/SDL_dibevents.c
--- SDL-1.2.14.org/src/video/windib/SDL_dibevents.c	Mon Feb 15 11:49:09 2010
+++ SDL-1.2.14/src/video/windib/SDL_dibevents.c	Mon Feb 15 11:51:15 2010
@@ -328,12 +328,13 @@
 	extern int mouse_relative;
 	extern int posted;
 
-	POINT mouse;
+	POINT mouse, originalMouse;
 #ifdef _WIN32_WCE
 	if ( !GetCursorPos(&mouse) && !GetLastStylusPos(&mouse) ) return;
 #else
 	if ( !GetCursorPos(&mouse) ) return;
 #endif
+	originalMouse = mouse;
 
 	if ( mouse_relative ) {
 		POINT center;
@@ -345,7 +346,11 @@
 		mouse.y -= center.y;
 		if ( mouse.x || mouse.y ) {
 			SetCursorPos(center.x, center.y);
-			posted = SDL_PrivateMouseMotion(0, 1, (Sint16)mouse.x, (Sint16)mouse.y);
+			GetCursorPos(&mouse);
+			// Make sure the mouse position actually changed
+			if (mouse.x != originalMouse.x || mouse.y != originalMouse.y) {
+				posted = SDL_PrivateMouseMotion(0, 1, (Sint16)mouse.x, (Sint16)mouse.y);
+			}
 		}
 	} else {
 		ScreenToClient(SDL_Window, &mouse);
diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzEvents.m SDL-1.2.14/src/video/quartz/SDL_QuartzEvents.m
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzEvents.m	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzEvents.m	2009-12-17 22:07:33.000000000 +0100
@@ -280,7 +280,9 @@
         the scancode/keysym.
     */
     if (SDL_TranslateUNICODE && state == SDL_PRESSED) {
-        [field_edit interpretKeyEvents:[NSArray arrayWithObject:event]];
+        if (!([event modifierFlags] & NSCommandKeyMask)) {
+            [field_edit interpretKeyEvents:[NSArray arrayWithObject:event]];
+        }
         chars = [ event characters ];
         numChars = [ chars length ];
         if (numChars > 0)
@@ -318,7 +320,7 @@
         }
     }
     
-    if (SDL_getenv ("SDL_ENABLEAPPEVENTS"))
+    if (SDL_getenv ("SDL_ENABLEAPPEVENTS") && !(mode_flags & SDL_FULLSCREEN))
         [ NSApp sendEvent:event ];
 }
 
diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.h SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.h
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.h	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.h	2009-12-17 23:23:22.000000000 +0100
@@ -38,6 +38,7 @@
 - (void)appWillUnhide:(NSNotification*)note;
 - (void)appDidUnhide:(NSNotification*)note;
 - (id)initWithContentRect:(NSRect)contentRect styleMask:(NSUInteger)styleMask backing:(NSBackingStoreType)backingType defer:(BOOL)flag;
+- (BOOL)performKeyEquivalent:(NSEvent*)event;
 @end
 
 /* Delegate for our NSWindow to send SDLQuit() on close */
diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.m SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.m
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.m	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.m	2009-12-17 22:07:33.000000000 +0100
@@ -197,6 +197,14 @@
     return [ super initWithContentRect:contentRect styleMask:styleMask backing:backingType defer:flag ];
 }
 
+- (BOOL)performKeyEquivalent:(NSEvent*)event
+{
+	/* give the menu a chance to handle the key equivalent */
+	[[NSApp mainMenu] performKeyEquivalent:event];
+	/* avoid beep by pretending we handled it */
+	return YES;	
+}
+
 @end
 
 @implementation SDL_QuartzWindowDelegate
