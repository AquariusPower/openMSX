diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzEvents.m SDL-1.2.14/src/video/quartz/SDL_QuartzEvents.m
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzEvents.m	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzEvents.m	2011-03-04 21:43:30.000000000 +0100
@@ -280,7 +280,9 @@
         the scancode/keysym.
     */
     if (SDL_TranslateUNICODE && state == SDL_PRESSED) {
-        [field_edit interpretKeyEvents:[NSArray arrayWithObject:event]];
+        if (!([event modifierFlags] & NSCommandKeyMask)) {
+            [field_edit interpretKeyEvents:[NSArray arrayWithObject:event]];
+        }
         chars = [ event characters ];
         numChars = [ chars length ];
         if (numChars > 0)
@@ -318,7 +320,7 @@
         }
     }
     
-    if (SDL_getenv ("SDL_ENABLEAPPEVENTS"))
+    if (SDL_getenv ("SDL_ENABLEAPPEVENTS") && !(mode_flags & SDL_FULLSCREEN))
         [ NSApp sendEvent:event ];
 }
 
diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.h SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.h
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.h	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.h	2011-03-04 21:43:30.000000000 +0100
@@ -38,6 +38,7 @@
 - (void)appWillUnhide:(NSNotification*)note;
 - (void)appDidUnhide:(NSNotification*)note;
 - (id)initWithContentRect:(NSRect)contentRect styleMask:(NSUInteger)styleMask backing:(NSBackingStoreType)backingType defer:(BOOL)flag;
+- (BOOL)performKeyEquivalent:(NSEvent*)event;
 @end
 
 /* Delegate for our NSWindow to send SDLQuit() on close */
diff -ru SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.m SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.m
--- SDL-1.2.14.org/src/video/quartz/SDL_QuartzWindow.m	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/quartz/SDL_QuartzWindow.m	2011-03-04 21:43:30.000000000 +0100
@@ -197,6 +197,14 @@
     return [ super initWithContentRect:contentRect styleMask:styleMask backing:backingType defer:flag ];
 }
 
+- (BOOL)performKeyEquivalent:(NSEvent*)event
+{
+	/* give the menu a chance to handle the key equivalent */
+	[[NSApp mainMenu] performKeyEquivalent:event];
+	/* avoid beep by pretending we handled it */
+	return YES;	
+}
+
 @end
 
 @implementation SDL_QuartzWindowDelegate
diff -ru SDL-1.2.14.org/src/video/wincommon/SDL_sysevents.c SDL-1.2.14/src/video/wincommon/SDL_sysevents.c
--- SDL-1.2.14.org/src/video/wincommon/SDL_sysevents.c	2009-10-13 01:07:14.000000000 +0200
+++ SDL-1.2.14/src/video/wincommon/SDL_sysevents.c	2011-03-04 21:46:56.000000000 +0100
@@ -316,10 +316,10 @@
 			if ( active ) {
 				/* Gain the following states */
 				appstate = SDL_APPACTIVE|SDL_APPINPUTFOCUS;
-				if ( this->input_grab != SDL_GRAB_OFF ) {
-					WIN_GrabInput(this, SDL_GRAB_ON);
-				}
-				if ( !(SDL_GetAppState()&SDL_APPINPUTFOCUS) ) {
+				if ( !(SDL_GetAppState() & SDL_APPINPUTFOCUS) ) {
+					if ( this->input_grab != SDL_GRAB_OFF ) {
+						WIN_GrabInput(this, SDL_GRAB_ON);
+					}
 					if ( ! DDRAW_FULLSCREEN() ) {
 						DIB_SwapGamma(this);
 					}
@@ -337,21 +337,23 @@
 				}
 #endif
 				posted = SDL_PrivateAppActive(1, appstate);
-				WIN_GetKeyboardState();
+				/*WIN_GetKeyboardState();*/
 			} else {
 				/* Lose the following states */
 				appstate = SDL_APPINPUTFOCUS;
 				if ( minimized ) {
 					appstate |= SDL_APPACTIVE;
 				}
-				if ( this->input_grab != SDL_GRAB_OFF ) {
-					WIN_GrabInput(this, SDL_GRAB_OFF);
-				}
+
 				if ( SDL_GetAppState() & SDL_APPINPUTFOCUS ) {
+					if ( this->input_grab != SDL_GRAB_OFF ) {
+						WIN_GrabInput(this, SDL_GRAB_OFF);
+					}
 					if ( ! DDRAW_FULLSCREEN() ) {
 						DIB_SwapGamma(this);
 					}
 					if ( WINDIB_FULLSCREEN() ) {
+						appstate |= SDL_APPMOUSEFOCUS;
 						SDL_RestoreDesktopMode();
 #if defined(_WIN32_WCE)
 						LoadAygshell();
@@ -372,8 +374,7 @@
 		case WM_MOUSEMOVE: {
 
 #ifdef WM_MOUSELEAVE
-			/* No need to handle SDL_APPMOUSEFOCUS when fullscreen */
-			if ( SDL_VideoSurface && !FULLSCREEN() ) {
+			if ( SDL_VideoSurface ) {
 				/* mouse has entered the window */
 
 				if ( !(SDL_GetAppState() & SDL_APPMOUSEFOCUS) ) {
@@ -398,11 +399,8 @@
 #ifdef WM_MOUSELEAVE
 		case WM_MOUSELEAVE: {
 
-			/* No need to handle SDL_APPMOUSEFOCUS when fullscreen */
-			if ( SDL_VideoSurface && !FULLSCREEN() ) {
+			if ( SDL_VideoSurface ) {
 				/* mouse has left the window */
-				/* or */
-				/* Elvis has left the building! */
 				posted = SDL_PrivateAppActive(0, SDL_APPMOUSEFOCUS);
 			}
 		}
diff -ru SDL-1.2.14.org/src/video/windx5/SDL_dx5events.c SDL-1.2.14/src/video/windx5/SDL_dx5events.c
--- SDL-1.2.14.org/src/video/windx5/SDL_dx5events.c	2009-10-13 01:07:15.000000000 +0200
+++ SDL-1.2.14/src/video/windx5/SDL_dx5events.c	2011-03-04 21:46:59.000000000 +0100
@@ -149,8 +149,8 @@
 #else
 		&c_dfDIMouse,
 #endif
-		(DISCL_FOREGROUND|DISCL_NONEXCLUSIVE),
-		(DISCL_FOREGROUND|DISCL_NONEXCLUSIVE), handle_mouse },
+		(DISCL_BACKGROUND|DISCL_NONEXCLUSIVE),
+		(DISCL_BACKGROUND|DISCL_NONEXCLUSIVE), handle_mouse },
 	{ NULL, NULL, NULL, 0, 0, NULL }
 };
 	
@@ -297,8 +297,7 @@
 {
 	extern int mouse_relative;
 
-	if ( (SDL_GetAppState() & (SDL_APPINPUTFOCUS|SDL_APPMOUSEFOCUS)) ==
-		(SDL_APPINPUTFOCUS|SDL_APPMOUSEFOCUS) ) {
+	if ( SDL_GetAppState() & SDL_APPMOUSEFOCUS ) {
 		posted = SDL_PrivateMouseMotion(
 			0, relative, x, y);
 
@@ -355,10 +354,6 @@
 			ClientToScreen(SDL_Window, &center);
 			SetCursorPos(center.x, center.y);
 		}
-	} else {
-		/* No window or mouse focus, control is lost */
-		mouse_lost = 1;
-		ClipCursor(NULL);
 	}
 }
 
@@ -375,6 +370,12 @@
 		return;
 	}
 
+	/* If mouse focus has been lost, make sure we release the cursor. */
+	if ( !(SDL_GetAppState() & SDL_APPMOUSEFOCUS) ) {
+		mouse_lost = 1;
+		ClipCursor(NULL);
+	}
+
 	/* If the mouse was lost, regain some sense of mouse state */
 	if ( mouse_lost && (SDL_GetAppState() & SDL_APPMOUSEFOCUS) ) {
 		POINT mouse_pos;
@@ -666,7 +667,7 @@
 	}
 
 	/* Pump the DirectInput flow */
-	if ( SDL_GetAppState() & SDL_APPINPUTFOCUS ) {
+	if ( SDL_GetAppState() & SDL_APPMOUSEFOCUS ) {
 		for ( i=0; i<MAX_INPUTS; ++i ) {
 			if ( SDL_DIdev[i] != NULL ) {
 				result = IDirectInputDevice2_Poll(SDL_DIdev[i]);
