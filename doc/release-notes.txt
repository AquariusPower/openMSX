Release Notes for openMSX 0.6.3 (2007-08-xx)
============================================

This release contains mostly several new features and improvements related to
sound. All sound chips are emulated at their native frequency and resampled
using advanced resampling techniques to the desired output frequency (mostly
44.1 kHz). This improves the sound quality a lot, because all aliasing
distortions are gone, now!

More sound related improvements involve better control (stereo balance setting
for each sound chip) and recording of sound chips (individual channels of sound
chips can be recorded). For PSG we even introduced some sound effects: vibrato
and detune can be enabled to get a fatter sound. Try this in Penguin Adventure!

Thanks to the blueMSX Team, we were able to bring some quick and easy new
features: emulation of the VLM5030, the sample chip used in the unreleased
Konami game Keyboard Master and a partial emulation of the Yamaha SFG-05 sound
module. (Still missing is the keyboard and MIDI support.)

Also on the non-sound department the blueMSX Team enabled to create some new
features: Gouda SCSI, MEGA-SCSI, ESE RAM, ESE SCC and WAVE SCSI. Note that the
SCSI emulation is still experimental!

Last but not least: a lock-up bug was removed from the Windows version, which
could occur on dual core or hyperthreading CPU's.

New or improved emulator features:
- SDLGL-PP renderer (OpenGL 2.0) can do RGBTriplet scaling in hardware.
- Several resampling algorithms now available: hq, blip and fast, the first two
  greatly reducing aliasing related sound distortions.
- Channels of sound chips can be individually recorded and muted.
- Sound chips now have a stereo balance setting instead of a mode (left, right,
  mono).
- PSG sound effects: vibrato and detune.

MSX device support:
- Partial support for Yamaha SFG-05 (only the YM2151, no keyboard and MIDI).
- Support for the VLM5030 in Keyboard Master.
- Support for ESE devices: MEGA SCSI, ESE RAM, ESE SCC, WAVE-SCSI (SCSI
  experimental).
- Support for Gouda/Novaxis SCSI (experimental).
- Support for password cartridge.
- Support for the Super Lode Runner mapper, which violates the MSX spec.
- Several small optimizations, mostly in SDLGL-PP renderer and CPU emulation.

Backwards-compatibility issues:
- <sounddevice>_mode setting (possible values left, right, mono, stereo) has
  been replaced with <sounddevice>_balance (possible values [-100, 100])

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc. We do try to be backwards compatible for at least one release,
  though. Keep in mind that openMSX is still evolving at a considerable speed.
- openMSX is confirmed to run on the following operating systems: Linux, Win32,
  Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, Sparc and PPC CPU's.
  Running on other operating systems (wherever SDL runs) or CPU's should be
  possible, but may require some modifications to the build system. If you are
  compiling on a new platform, please share your experiences (see below for
  contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200 MHz machine, others are slow on a 2 GHz machine. For performance tuning
  tips, see the Setup Guide.

openMSX Home Page:
  http://www.openmsx.org/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Post on our forum: http://forum.openmsx.org/
- Talk to us on #openmsx on irc.freenode.net.

Have fun with your emulated MSX!
                                        the openMSX developers
