Release Notes for openMSX 0.6.0 (2005-12-??)
============================================

After a long time, a fresh release which brings a lot of internal improvements
and some long standing new features as well.

The biggest change for the user is the fact that we removed the SDLLo renderer
and that we split the scalers into a separate scale_factor and scale_algorithm
setting. A factor of 1 replaces the SDLLo render and as a bonus we also added a
factor of 3! The latter makes also more exotic scalers possible, like the new
RGBTriplet one, which tries to emulate a (low res) Trinitron (Aperture Grille)
monitor. But, definitely try out the scalers you already know in combination
with a scale_factor of 3 as well.

Mac OS X Tiger users (and others with recent compilers) will be happy to find
out that this release will just compile cleanly on their systems. No need to get
CVS snapshots anymore! Also some problems specific for big endian CPU's (like
the Power PC in Macs) were fixed.

In the sound department we made yet another big quality improvement, this time
for DAC devices, like the turboR PCM and the Konami DAC which can be found in
the Hai no Majutsushi and Synthesizer products.

Note that in this release several incompatible changes to openMSX commands were
made. First of all, the cassetteplayer subcommands have changed, because we
added the possibility to save to cassette now as well. Also the keyjoystick
settings are incompatibly changed, which means your old bindings will be lost.
Finally the already mentioned renderer and scaler settings have changed
incompatibly. Please keep this in mind when upgrading!

New or improved emulator features:
- Printer logger and SRAM are flushed at regular intervals now.
- Settings that have their default value are not saved anymore, which makes
  upgrading easier.
- There is now support for a second keyjoystick.
- More extensive debugging, including conditional break points.
- Apart from communication via stdio, communication via sockets is now enabled.
  This means you can connect to openMSX at run time! This will be used by a
  debugger that is in development.
- Reorganisation of renderers and scalers (including new ones), see above.
- Screenshot command has a -prefix option, useful in combination with the new
  "guess_title" script: give meaningful names to your screenshot.
- New "fullspeedwhenloading" setting. Makes sure openMSX runs at maximum speed
  when the MSX is loading from disk or tape.
- V9990: speed improvements, enabled scalers, scanline and blur for V9990
  display

MSX device support:
- Internal CAS to WAV conversion produces now 5520 baud WAVs, for faster
  loading.
- Implementation of screen 6 border and background stripes.
- Implemented TurboR hardware pause and hardware PCM mute.
- Sound quality improvement of DAC devices (see above).
- Implemented saving to cassette (see above).
- Finally implemented a work around for the CAPS LOCK problem.
- Implemented support for 192kB VRAM (now default in the Boosted_MSX2_EN
  machine).
- Implemented support for ADVRAM (in two flavours??)
- Implemented "magic key" joystickport dongle.

Build system, packaging, documentation:
- More compile fixes for GCC 4.x.

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc.
- openMSX is confirmed to run on the following operating systems: Linux, Win32,
  Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, Sparc and PPC CPU's.
  Running on other operating systems (wherever SDL runs) or CPU's should be
  possible, but may require some modifications to the build system. If you are
  compiling on a new platform, please share your experiences (see below for
  contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200MHz machine, others are slow on a 2GHz machine. For performance tuning
  tips, see the Setup Guide.

CALL FOR HELP:
To increase video rendering performance on Windows, we are looking for a
DirectX programmer who would like to help us!

openMSX Home Page:
  http://openmsx.sourceforge.net/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Use the new forum on www.openmsx.org.
- Talk to us on #openmsx on irc.freenode.net.

Have fun with your emulated MSX!
                                        the openMSX developers
