Release Notes for openMSX 0.5.1 (2005-03-05)
============================================

This release includes a redesign of the ROM database XML file. This new format
is supported by both blueMSX and openMSX; other emulators are welcome to adopt
it as well. The old "romdb.xml" file is still supported, but will disappear in
the future. The new "softwaredb.xml" file is generated from a central SQL
database, using information from the old blueMSX and openMSX ROM databases. The
new database design is prepared to support disks in addition to ROMs.

Another major new feature is emulation of the Sunrise GFX9000. We have been
working on this for quite some time already, but in this release you can see the
first usable results. Do note that the emulation is still far from complete,
fast or bug free. But we thought you might appreciate it already in its current
shape. To use it, start openMSX with the "gfx9000" extension selected. You can
switch between the MSX VDP and the GFX9000 picture with the "videosource"
setting. Note that right now, only the SDLHi and SDLLo renderers are able to
render the GFX9000 picture.

Also new are the OSD (on-screen display) LEDs. Catapult users have had LEDs for
some time, but now if you use openMSX from the console or full screen you can
also see the status of the LEDs. OSD LEDs are configurable via TCL scripts.

New or improved emulator features:
- A new mixer implementation improves the sound quality of PCM and PSG samples
  a lot.
- The "samples" and "frequency" settings can now be changed at run time.
- Various speed ups, especially for low end machines due to better frame skip.
- You can now use IPS patches to modify disk and ROM images as openMSX loads
  them into memory, without changing the images files.
- Extensions inside ZIP files are now used to guess the right file type.
- Many improvements for Mac OS X, including bug fixes and more Mac-like key
  bindings. When upgrading from openMSX 0.5.0, you can remove your
  ~/.openMSX/share/settings.xml to get new the key bindings.
- New "escape_grab" command: escapes from "grabinput" once.
- Debugging: enabled "cputrace" setting for normal builds as well.

MSX device support:
- Fixed turboR DRAM support. Programs that use this, like TRCAS, work now.
- Fixed booting of SVI-738 CP/M disks.
- Timing improvements of the WD2793 FDC. Fixes a few games that rely on it.
- The 13 bit MSX-AUDIO DAC actually works now (used in modplayer).
- Added MegaRAM Disk, thanks to Adriano da Cunha.
- Improved Sony HBI-55, thanks to Daniel Vik.
- Fixes in Tetris II Special Edition dongle.
- Added separate machine configuration for Philips VG 8020/20.
- Added MSX-AUDIO 2 extension. This is an Y8910 on alternative I/O ports.
- Added FM Stereo PAK extension.

Build system, packaging, documentation:
- We now provide Debian packages, shortly after the source release.
- Added build support for OpenBSD and NetBSD.
- Updated C-BIOS to 0.20.

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc.
- openMSX is confirmed to run on the following operating systems: Linux, Win32,
  Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64 and PPC CPUs.
  Running on other operating systems (wherever SDL runs) or CPUs should be
  possible, but will require some modifications to the build system. If you are
  compiling on a new platform, please share your experiences (see below for
  contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200MHz machine, others are slow on a 2GHz machine. For performance tuning
  tips, see the Setup Guide.

CALL FOR HELP:
To increase video rendering performance on Windows, we are looking for a
DirectX programmer who would like to help us!

openMSX Home Page:
  http://openmsx.sourceforge.net/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Use the new forum on www.openmsx.org.
- Talk to us on #openmsx on irc.freenode.net.

Have fun with your emulated MSX!
                                        the openMSX developers
