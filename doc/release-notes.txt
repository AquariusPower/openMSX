Release Notes for openMSX 0.7.1 (2009-06-28)
============================================

This release comes mostly with good news for Windows users: we have a brand new
installer with binaries which have been created in a brand new way, using
Microsoft Visual C++ 2008. This means smaller binaries and also support for
64-bit Windows operating systems. Also, several long standing problems have
been fixed in the Windows release of openMSX. It now includes full support for
unicode, e.g.!

For the rest we have mostly fixed smaller issues (see below) and added some
cool demonstrations of what one can do with the combination of (Tcl) scripting,
the debug command and the OSD.

New or improved emulator features:
- Removed buggy SDLGL renderer (instead use SDLGL-PP)
- Debugging:
  - implemented step_out
  - implemented skip_instruction
  - implemented general debug conditions (not bound to addresses anymore, but
    note: this is very CPU intensive!)
- Speed optimizations in the CPU emulation
- Console now uses TrueType fonts, and can display localized text now (as long
  as the characters are in the used font), in other words: it supports unicode
- Optimizations in ZMBV encoding cause openMSX video recordings to become
  smaller and the encoding to be faster
- As is default in fMSX, it is now possible to automatically pause openMSX when
  the mouse pointer leaves the openMSX window (not enabled by default)
- Added icons in the OSD for 'pause', 'full throttle', 'debug break' and 'mute'
  status
- Added several improvements on the OSD, regarding features, bug fixes and speed
- Fixed some long standing bugs on Windows:
  - ALT-SPACE no longer pops up a context window
  - Unicode is now fully supported (no more problems with localized versions of
    Windows e.g.). Note: this means openMSX requires Windows 2000 or higher as
    of this release.
  - socket communication (e.g. with the openMSX debugger) is secure now. This
    does mean that older builds of the openMSX debugger will not work anymore
    with this openMSX release, you need an updated build!
- Added the possibility to include OSD elements in screenshots, which are now
  no longer included by default (e.g. typing screenshot in the console no longer
  shows the console in the screenshot)
- Added some scripts that demonstrate the OSD framework:
  - vu_meters: shows graphical VU meters for each channel of each sound chip in
    the currently emulated MSX
  - scc_viewer: shows current waveform and volume of the SCC channels
  - mog_overlay: help and extra information when playing The Maze of Galious
  - info_panel: a general information panel, similar to the DIGIblue v2 theme
    of blueMSX

MSX device support:
- Several new machines were added, e.g. Sony HB-F700P, Panasonic CF-2700
  (German), Talent DPC-200 (Argentinian), Yamaha CX5M, Sanyo PHC-28L, Sanyo
  PHC-28S, Yamaha YIS-503F, Sanyo MPC-25FD (thanks jltursan)
- Added Sharp HB-3600 dual disk drive
- Accuracy improvements:
  - Added difference between AY8910 and YM2149 PSG's when reading registers
  - Z80: added 'ld a,i' quirk
  - V99x8:
    - implemented sprite collision coordinate status registers
    - fixed detail of LINE command (fixing one problem in Syntax Infinity)
    - implemented VR bit (fixing another problem in Syntax Infinity)
  - Added a memory mirror device to properly emulate the Sony HB-10P
- Fixed sound quality regression in YM2413 emulation
- Fixed very long standing bug in vblank interrupt timing, resolving many
  problems like the Zanac title screen, Adonis music speed, Galaga slowdowns,
  Penguin Adventure start up, ...
- Added emulation of Nowind (mostly useful for Nowind firmware developers)
- Added emulation of the Arkanoid pad, using the mouse

Build system, packaging, documentation:
- Build support for Microsoft Visual C++ on Windows. As a result, we have
  smaller binaries for Win32 and we now also have support for 64-bit Windows.
- New installer based on WiX on Windows
- Added a super-opt flavour which does the most aggressive optimizations. This
  includes using "computed gotos" in the CPU code (which speeds it up by
  roughly 10%), but may need 1GB of RAM at compile time.
- Added support for Hurd operating systems (tested on Debian GNU/Hurd)
- Converted (most of) the build system to Python, so that it is a lot better
  maintainable and the Visual C++ build can also make use of it. Python (> 2.4
  but < 3.0) is now required to compile openMSX.

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc. We do try to be backwards compatible for at least one release,
  though. Keep in mind that openMSX is still evolving at a considerable speed.
- openMSX is confirmed to run on the following operating systems: Linux, Win32,
  Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, PPC, ARM and Sparc
  CPU's. Running on other operating systems (wherever SDL runs) or CPU's should
  be possible, but may require some modifications to the build system. If you
  are compiling on a new platform, please share your experiences (see below for
  contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200 MHz machine, others are slow on a 2 GHz machine. For performance tuning
  tips, see the Setup Guide.

openMSX Home Page:
  http://www.openmsx.org/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Post on our forum: http://forum.openmsx.org/
- Talk to us on #openmsx on irc.freenode.net.

Have fun with your emulated MSX!
                                        the openMSX developers
