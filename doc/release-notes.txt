Release Notes for openMSX 0.5.2 (2005-05-??) DRAFT
============================================

This release is mainly a bug fix release with little new features, but a lot of
improvements! We mainly tried to fix some sound problems with this release. We
reworked the YM2413 engine by Okazaki, bringing the openMSXified version up to
date with the latest release of MSXplug. We also fixed an annoying bug in the
SCC, which screwed up some sound effects, amongst others, as well as the
sampleRAM detection of MSX-AUDIO devices and the timer accuracy of OPL4 and
MSX-AUDIO. Finally, we also added a DirectSound driver for Windows users. 

A new sound related feature is the sound logger. It's pretty simple for now, you
can enable and disable the logging of the sound you hear on the speakers to a
WAV file. Note that this can take a huge amount of disk space, so be careful
with it. Also, with this version all pops and stutters you may hear on the
speakers will also end up in the file. Future versions will be better.

A last new (but still a bit experimental) feature is the file manipulator. This
is a new built in toolkit to transfer files from the host OS to the MSX disks
(disk images and hard disk images with partitions are all supported) and vice
versa. You can also use it to create new (hard) disk images and format them. A
complete description is in doc/Using-diskmanipulator.txt.


New or improved emulator features:
- New scaler: HQ2xLite. This is a scaler that is almost as good as HQ2x, but
  uses a lot less CPU. 
- Improved debugger, with some new (TCL based) commands like disasm, step_in,
  step_over and run_to.
- Added a cheat finder script. For an explanation how to use it, see this
  openMSX forum post: http://forum.openmsx.org/viewtopic.php?t=34
- Extended IPS patch support, it should now support all IPS files.
- New setting: sound_driver. DirectSound is default on Windows, 'sdl' on other
  operating systems. Many thanks to Daniel Vik for helping with DirectSound.
- Updated ROM database.
- Added trainers.tcl: hundreds of game trainers! Use trainer_[TAB] in the
  console to switch on the trainer for the game you want.
- Use revamped console background and font as default. Note that you should
  change it yourself if you still use a settings.xml from a previous version.
  (Or remove this old settings.xml...)

MSX device support:
- Updated Okazaki YM2413 core (now the default).
- Added pixel accurate rendering to V9990 emulation. Note that the timing may
  still be quite incorrect.
- Improved timing on turbo R machines. For example speed difference between
  R800-ROM and R800-DRAM mode is now emulated.

Build system, packaging, documentation:
- Added experimental build support for Sparc, DEC Alpha, ARM, HP PA-RISC, IA-64,
  Motorola 680x0, MIPS and IBM S/390. Except for Sparc these are all untested.
- openMSX is now relocatable on Mac OS X, which means you can move the binary
  around, without problems.
- Our Debian packages are now uploaded to the Debian archive, soon after
  release.

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc.
- openMSX is confirmed to run on the following operating systems: Linux, Win32,
  Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, Sparc and PPC CPUs. 
  Running on other operating systems (wherever SDL runs) or CPUs should be
  possible, but will require some modifications to the build system. If you are
  compiling on a new platform, please share your experiences (see below for
  contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200MHz machine, others are slow on a 2GHz machine. For performance tuning
  tips, see the Setup Guide.

CALL FOR HELP:
To increase video rendering performance on Windows, we are looking for a
DirectX programmer who would like to help us!

openMSX Home Page:
  http://openmsx.sourceforge.net/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Use the new forum on www.openmsx.org.
- Talk to us on #openmsx on irc.freenode.net.

Have fun with your emulated MSX!
                                        the openMSX developers
