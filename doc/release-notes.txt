Release Notes for openMSX 0.11.0 (2014-10-xx)
=============================================

This release brings you the following important new features: VDP access timing
now also for MSX1 modes (corruption with too fast VRAM access will be visible
now), implementation of most defailed differences between all used VDP chips
and emulation of MegaFlashROM SCC+ SD.
On top of that, there are some important (long standing) bug fixes, like the
proper implementation of envelopes for MSX-AUDIO, fixing for example "Copy is
Crime" by Impact.
And last but not least, a lot of work was done under the bonnet, giving you
even better performance and preparations for the future.

Here's the list with all highlights:

MSX device support:
- added VDP I/O port mirroring to machines of which we are certain it exists
- added emulation of MegaFlashROM SCC+ SD. Note: the implementation is such
  that existing software works on it, but do not fully rely on it when
  developing for this cartridge!
- improved Sony HBI-55 emulation
- fixed envelope for MSX-AUDIO (Y8950), the infamous legato-envelope bug is now
  finally fixed!
- fixed handling of key-off for percussive tones on MSX-AUDIO
- fixed detection of Philips Music Module in Tetris II Special Edition
- fixed bug in 5/9th sprite detection status register
- implemented VDP access timing also for character and text modes (both for
  MSX1 VDP's and V99x8): too fast VDP access will now cause corruption on
  openMSX too
- fixed some details in several machine configurations
- added support for specific MSX1 VDP's (mostly thanks to hap for all the
  research):
  - the exact VDP type can now be specified in the config file
  - differences between Toshiba T6950/T7937A, TMS99xx and TMS91xx MSX1 VDP's
    are now emulated (except sprite cloning)
  - updated many machine configs with the proper MSX1 VDP type (where known,
    additions/corrections are welcome!)
- implemented that V99x8 does not support undocumented mixed modes
- fixed KANA/CODE key not working in CHARACTER input mode
- added the following machines: Daewoo CPC-51 Zemmix V, Daewoo CPC-300E,
  Toshiba HX-51I, Yamaha YIS-503IIR, Toshiba FS-TM1, Sanyo MPC-10 (Wavy 10),
  Yamaha CX5MII, Fujitsu FM-X (thanks to NYYRIKKI, Werner Kai, Maxim Vlasov and
  Alex Krasivsky)
- added the Casio KB-7 and KB-10 docking stations (note: these extensions only
  work with the Casio PV-7 and MX-10 respectively; do not be worried
  when they appear to be not working according to Catapult!)
- added the Gradiente CT-80E 80 column card extension, thanks to Maur√≠cio Braga


New or improved emulator features:
- added de-flicker video filter via new 'deflicker' setting. Use this to remove
  flickering in cases like the dvik demos where 105 colors are simulated on
  MSX1 by alternating different native colors. It's disabled by default.
- performance improvements:
  - speed up execution of Tcl scripts
  - many various other optimizations
- fixed auto_enable_reverse (set/unset auto enabling reverse at startup)
- rewrote most OpenGL 2 code to be more compatible with OpenGL ES
- improved guessing of mapper type for 64kB ROMs
- fixed a bug with watch_points affecting the execution flow
- added NYYRIKKI's fast CAS loading/saving script, enable with setting the
  'fast_cas_load_hack_enabled' setting to on
- added setting to configure dead zone for joysticks
- added support for joystick hats (can be used just like buttons)
- added dir-as-disk support for the OSD menu
- removed experimental libao sound driver
- added support for R-ALT on Korean keyboard (thanks to Miso Kim)
- improved joystick support in OSD menu (take deadzone into account)


Build system, packaging, documentation:
- even more use of C++11 features, when using gcc use 4.7 or higher
- removed build dependency on libxml2
- removed many/all unused features/libs from the build system
- added support to cross compile with MinGW-w64 for (at least) 32 bit Windows
  using Linux
- cleaned up the stuff in the doc directory - you now get what we really wanted
  you to get :)
- changed packaging method to include stuff by default instead of exclude stuff
  by default
- fixed native compilation on mipsel

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

CPU and graphics performance varies a lot, depending on the openMSX settings
and the MSX hardware and software you're emulating. Some things run fine on a
200 MHz machine, others are slow on a 2 GHz machine. For performance tuning
tips, see the Setup Guide.

openMSX is confirmed to run on the following operating systems: Linux, Windows,
Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, PPC, ARM, MIPS and Sparc
CPU's. Running on other operating systems (wherever SDL runs) or CPU's should
be possible, but may require some modifications to the build system. If you are
compiling on a new platform, please share your experiences (see below for
contact info), so we can make openMSX more portable.

openMSX Home Page:
  http://openmsx.sourceforge.net/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Talk to us on #openmsx on irc.freenode.net.
- Use the forum on http://www.msx.org/forum/semi-msx-talk/openmsx
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".

Thanks to all contributors for their feedback, support, bug reports, testing,
coding and other help!

Have fun with your emulated MSX!
                                        the openMSX developers
