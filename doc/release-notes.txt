Release Notes for openMSX 0.x.x (2012-0x-xx)
============================================

This release improves a lot on accuracy of floppy support, especially by the
introduction of support for the DMK format. This means it should be possible to
run all MSX disk software without patching it.

Furthermore, our efforts to improve performance has some results: start up time
has almost halved on a Dingoo A320!

Here's the list with all highlights:

MSX device support:
- Bug fixes:
  - cursor order in B-modes of GFX9000
  - several small issues in existing MSX machine configurations
  - broken border rendering on ARM CPU's
  - 2nd drive detection on National machines
  - detail in MSX-AUDIO that prevented proper detection in MSX-AUDIO BIOS 1.3
- Accuracy improvements:
  - much improved accuracy for Floppy Drive Controllers (mostly WD2793 and
    alike)
  - added support for delayed motor off for disk drives, as in real machines
    implemented by the CXD1032 chip
  - disk drive rotation is now correct
  - added support for persistency of S1985 back-up RAM
- Added initial support for Video9000:
  - new extension, which gives a new Video9000 videosource
  - the Video9000 can display the GFX9000 output superimposed over the normal
    VDP. Software which writes to I/O port 0x6F when a Video9000 is connected
    will make sure the right video signal is displayed. This is now emulated
  - added video recording for Video9000 videosource
- Added support for the FDC connection style of the Victor HC-9x
- Added support for several floppy drive extensions: Sanyo MFD-001, Mitsubishi
  ML-30DC/ML-30FD, Talent DPF-550, AVT DPF-550, Philips NMS 1200
- Added Spanish Mitsubishi ML-G1, Spanish Mitsubishi ML-G3, Japanese Sony HB-10
  and Talent TPC-310 machines

New or improved emulator features:
- MSX developer features:
  - more mappers now have a romblocks debuggable
  - added break helper procs address_in_slot
  - added watch_in_slot to add watch point in a slot
  - breakpoints and Watchpoints can now be conditioned from ROM blocks as well
  - previously hardcoded warnings for invalid PSG directions and di;halt
    detection are now a Tcl callback, which means you can e.g. let openMSX go
    into a break point when they occur, or disable them altogether
- Console support/scripts:
  - added type command that can type from file and a special version with
    offset to type passwords)
  - added syntax highlighting for Tcl in the console
  - show errors in the console in red
  - implemented tab-completion for nested Tcl commands
- OSD menu improvements (mostly useful for hand held users):
  - list of machines and extensions are now sorted alphabetically
  - file lists are now filtered on extension case insensitively
- Performance improvements:
  - OSD
  - start-up time
  - several scripts (a.o. reverse bar)
- Miscellaneous:
  - reverse bar has now even clear colors to reflect recording (red) and
    replaying state
  - don't print an error when an initial CMOS/SRAM file isn't found
  - enable auto run cassettes by default

Build system, packaging, documentation:
- Upgraded 3rd party libs
- Removed support for PPC on Mac and added build instructions for clang
- Added several utilities for DMK support (dumping tool, analyzing tool,
  creation tool and conversion tools)
- First step in phasing out the roms/ directories: removed them (including
  SHA1SUMS file which was redundant with the hardwareconfig.xml files) and new
  configs do not use the path with roms/ anymore. Use the systemroms pool
  instead.

And of course the usual various bug fixes.

In "doc/manual/index.html" you can find a set of HTML manuals for openMSX.
Make sure you read this if you haven't used openMSX before, but also to learn
more about the new and changed features.

Known issues / caveats:
- Emulation is not perfect yet.
  See the bug tracker on sourceforge.net for known bugs.
- Until we reach version 1.0.0, file formats can change in an incompatible way
  without backwards compatibility. This happened between 0.4.0 and 0.5.0, for
  example. Keep this in mind if you create machine descriptions, ROM database
  entries etc. We do try to be backwards compatible for at least one release,
  though. Keep in mind that openMSX is still evolving at a considerable speed.
- openMSX is confirmed to run on the following operating systems: Linux,
  Windows, Mac OS X, FreeBSD, OpenBSD and NetBSD; on x86, x86-64, PPC, ARM,
  MIPS and Sparc CPU's. Running on other operating systems (wherever SDL runs)
  or CPU's should be possible, but may require some modifications to the build
  system. If you are compiling on a new platform, please share your experiences
  (see below for contact info), so we can make openMSX more portable.
- CPU and graphics performance varies a lot, depending on the openMSX settings
  and the MSX hardware and software you're emulating. Some things run fine on a
  200 MHz machine, others are slow on a 2 GHz machine. For performance tuning
  tips, see the Setup Guide.

openMSX Home Page:
  http://www.openmsx.org/
Project page on SourceForge:
  http://sourceforge.net/projects/openmsx/
Contact options:
- Send a message to the openmsx-user mailing list.
  Go to the SourceForge project page and look under "Lists".
- Post on our forum: http://forum.openmsx.org/
- Talk to us on #openmsx on irc.freenode.net.

Thanks to all contributors for their feedback, support, bug reports, testing,
coding and other help!

Have fun with your emulated MSX!
                                        the openMSX developers
